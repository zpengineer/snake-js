{"version":3,"sources":["js/game.js","index.js"],"names":["refs","canvas","document","querySelector","scoreEl","startBtn","restartBtn","modalStart","modalRestart","ctx","getContext","snakeSize","fruitSize","snakeX","width","snakeY","height","dx","dy","fruitX","getRandomCoord","fruitY","score","snake","tailLength","gameInterval","SPEED_GAME","drawSnake","unshift","x","y","length","pop","forEach","item","index","beginPath","fillStyle","fillRect","fill","i","console","log","gameOver","drawFruit","closePath","draw","clearRect","drawScore","setTimeout","font","fillText","snakeControl","e","up","down","right","left","keyCode","max","min","Math","floor","random","clearTimeout","textContent","classList","remove","add","restartGame","startGame","addEventListener"],"mappings":"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","file":"src.0c9b84cf.js","sourceRoot":"../src","sourcesContent":["const refs = {\n    canvas: document.querySelector('#snake'),\n    scoreEl: document.querySelector(\".score\"),\n    startBtn: document.querySelector('[data-modal-start]'),\n    restartBtn: document.querySelector('[data-modal-restart]'),\n    modalStart: document.querySelector('#modalStart'),\n    modalRestart: document.querySelector('#modalRestart'),\n}\n\nconst ctx = refs.canvas.getContext(\"2d\");\n\nconst snakeSize = 10;\nconst fruitSize = 10;\n\nlet snakeX = refs.canvas.width / 2;\nlet snakeY = refs.canvas.height / 2;\n\nlet dx = snakeSize;\nlet dy = 0;\n\nlet fruitX = getRandomCoord(refs.canvas.width / snakeSize, 0) * snakeSize;\nlet fruitY = getRandomCoord(refs.canvas.width / snakeSize, 0) * snakeSize;\n\nlet score = 0;\nlet snake = [];\nlet tailLength = 3;\nlet gameInterval = null;\nlet SPEED_GAME = 5;\n\ndocument.addEventListener('keydown', snakeControl);\nrefs.startBtn.addEventListener('click', startGame);\nrefs.restartBtn.addEventListener('click', restartGame);\n\nfunction drawSnake() {\n\n    snakeX += dx;\n    snakeY += dy;\n\n    snake.unshift({ x: snakeX, y: snakeY });\n\n    if (snake.length > tailLength) {\n        snake.pop();\n    }\n\n    snake.forEach(function(item, index){\n        ctx.beginPath();\n        ctx.fillStyle = '#7d2c98';\n        ctx.fillRect(item.x, item.y, snakeSize, snakeSize);\n        ctx.fill();\n\n        for (var i = index + 1; i < snake.length; i += 1) {\n            if(snake[i].x === item.x && snake[i].y === item.y){\n                console.log('GAME OVER');\n\n                gameOver();\n            }\n        }\n        \n    });\n\n    if (snakeX === fruitX && snakeY === fruitY) {\n\n        score += 1;\n        tailLength += 1;\n\n        fruitX = getRandomCoord(refs.canvas.width / snakeSize, 0) * snakeSize;\n        fruitY = getRandomCoord(refs.canvas.width / snakeSize, 0) * snakeSize;\n    }\n\n}\n\nfunction drawFruit() {\n\n    ctx.beginPath();\n    ctx.fillStyle = '#00ff73';\n    ctx.fillRect(fruitX, fruitY, fruitSize, fruitSize);\n    ctx.fill();\n    ctx.closePath();\n}\n\nfunction draw() {\n    ctx.clearRect(0, 0, refs.canvas.width, refs.canvas.height);\n    drawFruit();\n    drawSnake();\n    drawScore();\n\n    if (snakeX > refs.canvas.width - snakeSize ) {\n        snakeX = 0;\n    } else if (snakeX < 0) {\n        snakeX = refs.canvas.width - snakeSize;\n    }\n\n    if (snakeY > refs.canvas.height - snakeSize) {\n        snakeY = 0;\n    } else if (snakeY < 0) {\n        snakeY = refs.canvas.height - snakeSize;\n    }\n\n    if (score > 5 ) {\n        SPEED_GAME = 7;\n    }\n    \n    if (score > 10) {\n        SPEED_GAME = 10;\n    }\n    \n    if (score > 18) {\n        SPEED_GAME = 14;\n    }\n\n    console.log(SPEED_GAME);\n\n    gameInterval = setTimeout(draw, 1000 / SPEED_GAME)\n\n}\n\nfunction drawScore() {\n    ctx.font = \"16px Arial\";\n    ctx.fillStyle = \"#0095DD\";\n    ctx.fillText(\"Score: \" + score, 8, 20);\n}\n\nfunction snakeControl(e) {\n\n    const up = dy === -snakeSize;\n    const down = dy === snakeSize;\n    const right = dx === snakeSize;\n    const left = dx === -snakeSize;\n\n    if (e.keyCode == 39 && !left) {\n        dx = snakeSize;\n        dy = 0;\n    } else if (e.keyCode == 37 && !right) {\n        dx = -snakeSize;\n        dy = 0;\n    } else if (e.keyCode == 38 && !down) {\n        dy = -snakeSize;\n        dx = 0;\n    } else if (e.keyCode == 40 && !up) {\n        dy = snakeSize;\n        dx = 0;\n    }\n}\n\nfunction getRandomCoord(max, min) {\n    return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction gameOver() {\n\n    clearTimeout(gameInterval);\n\n    refs.scoreEl.textContent = `Your score: ${score}`;\n    refs.modalRestart.classList.remove('modal-close');\n    refs.modalRestart.classList.add('modal-open');\n\n}\n\nfunction restartGame() {\n\n    refs.modalRestart.classList.remove('modal-open');\n    refs.modalRestart.classList.add('modal-close');\n\n    ctx.clearRect(0, 0, refs.canvas.width, refs.canvas.height);\n\n    snakeX = refs.canvas.width / 2;\n    snakeY = refs.canvas.height / 2;\n\n    fruitX = getRandomCoord(refs.canvas.width / snakeSize, 0) * snakeSize;\n    fruitY = getRandomCoord(refs.canvas.width / snakeSize, 0) * snakeSize;\n\n    snake = [];\n    tailLength = 3;\n    score = 0;\n    SPEED_GAME = 5;\n\n    dx = snakeSize;\n    dy = 0;\n    draw();\n}\n\nfunction startGame() {\n\n    refs.modalStart.classList.remove('modal-open');\n    refs.modalStart.classList.add('modal-close');\n    draw();\n}","import './sass/main.scss';\nimport './js/game.js';\n"]}